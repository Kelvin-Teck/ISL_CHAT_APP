{
	"info": {
		"_postman_id": "c5414e1b-eeed-47db-8db2-175d0b1e08f3",
		"name": "API Documentation for Chat Application",
		"description": "# User Registration API\n\n## Endpoint\n\n`POST /user/register`\n\n## Request Body\n\n- `name` (string): User's full name\n- `email` (string): User's email address\n- `password` (string): User's chosen password\n- `username` (string): User's desired username\n- `selectedClass` (string): The selected class for the user\n    \n\n## Response\n\n- `user` (object): Information about the registered user\n    - `_id` (string): User's unique identifier\n    - `name` (string): User's full name\n    - `username` (string): User's username\n    - `email` (string): User's email address\n    - `isAdmin` (boolean): Indicates if the user is an admin\n    - `selectedClass` (string): The selected class for the user\n    - `token` (string): Authentication token for the user\n\n## Description\n\nThis API endpoint allows a user to register a new account.\n\n## Error Responses\n\n- Status Code: 400 Bad Request\n    - `msg` (string): Error message indicating the missing required fields or existing account/username.\n- Status Code: 500 Internal Server Error\n    - `error` (string): Error message indicating an internal server error.\n\n## Usage\n\n- Send a POST request to `/user/register` with the required request body fields.\n- If successful, the API will create a new user and return the user's information along with an authentication token.\n    \n\n### Example Request Body\n\n``` json\n{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"username\": \"johndoe\",\n  \"selectedClass\": \"Class A\"\n}\n\n ```\n\n### Example Response Body\n\n{  \n\"user\": {  \n\"_id\": \"user_id\",  \n\"name\": \"John Doe\",  \n\"username\": \"johndoe\",  \n\"email\": \"[john.doe@example.com](https://mailto:john.doe@example.com)\",  \n\"isAdmin\": false,  \n\"selectedClass\": \"Class A\"  \n},  \n\"token\": \"authentication_token\"  \n}\n\n# User Login API\n\n## Endpoint\n\n- `POST /user/login`\n    \n\n## Request Body\n\n- `username` (string): User's username\n- `password` (string): User's password\n    \n\n## Response\n\n- If login is successful:\n    - `user` (object): User's info\n        - `_id` (string): User's ID\n        - `name` (string): User's name\n        - `username` (string): User's username\n        - `email` (string): User's email\n        - `isAdmin` (boolean): User's admin status\n        - `accessGranted` (boolean): User's access status\n    - `token` (string): Authentication token\n- If login fails:\n    - `msg` (string): Error message, e.g., \"Invalid Username or Password\"\n\n## Description\n\nAllows a user to log into the system.\n\n## Errors\n\n- 400 Bad Request: Missing or incorrect info\n- 401 Unauthorized: User's access not granted\n- 500 Internal Server Error: Server issue\n    \n\n## Usage\n\n- Send a POST request to `/user/login` with valid credentials.\n    \n\n### Example Request Body\n\n``` json\n{\n  \"username\": \"johndoe\",\n  \"password\": \"password123\"\n}\n\n ```\n\n### Example Successful Response\n\n{  \n\"user\": {  \n\"_id\": \"user_id\",  \n\"name\": \"John Doe\",  \n\"username\": \"johndoe\",  \n\"email\": \"[john.doe@example.com](https://mailto:john.doe@example.com)\",  \n\"isAdmin\": false,  \n\"accessGranted\": true  \n},  \n\"token\": \"authentication_token\"  \n}\n\n### Example Unsuccessful Response\n\n{  \n\"msg\": \"Invalid Username or Password\"  \n}\n\n# Fetch Users API\n\n## Endpoint\n\n- `GET /user/fetchUsers`\n    \n\n## Request Parameters\n\n- `search` (string, optional): Search keyword to filter users by name or username.\n    \n\n## Response\n\n- List of user objects, each containing:\n    - `_id` (string): User's unique identifier\n    - `name` (string): User's name\n    - `email` (string): User's email address\n\n## Description\n\nRetrieves a list of users based on an optional search query.\n\n- If `search` is provided, it performs a case-insensitive search on user names and email addresses, returning matching users.\n- If no `search` is provided, it returns all users except the current user (identified by the token).\n    \n\n## Errors\n\n- 500 Internal Server Error: Server issue\n    \n\n## Usage\n\n- Send a GET request to `/user/fetchUsers` with an optional `search` query parameter.\n    \n\n### Example Request\n\n- Fetch all users:\n    - `/user/fetchUsers`\n- Fetch users with a specific search keyword:\n    - `/user/fetchUsers?search=johndoe`\n\n## Example Response\n\n``` json\n[\n  {\n    \"_id\": \"user_id_1\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\"\n  },\n  {\n    \"_id\": \"user_id_2\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane.smith@example.com\"\n  }\n]\n\n ```\n\n# Access Chat API\n\n## Endpoint\n\n- `POST /chat/`\n    \n\n## Request Body\n\n- `userId` (string): Identifier of the user to access the chat with.\n    \n\n## Response\n\n- Chat object with details.\n    \n\n## Description\n\n- Accesses an existing chat or creates a new one for communication with another user.\n- Requires the `userId` of the user with whom you want to access the chat.\n- Returns the chat object with relevant details.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid or missing parameters\n- 500 Internal Server Error: Server issue\n    \n\n## Usage\n\n- Send a POST request to `/chat/` with the `userId` in the request body.\n    \n\n### Example Request Body\n\n``` json\n{\n  \"userId\": \"user_id_123\"\n}\n\n ```\n\n## Example Response (Existing Chat)\n\n{  \n\"_id\": \"chat_id_123\",  \n\"chatName\": \"Chat with User\",  \n\"isGroupChat\": false,  \n\"users\": \\[  \n{  \n\"_id\": \"user_id_1\",  \n\"name\": \"John Doe\",  \n\"email\": \"[john.doe@example.com](https://mailto:john.doe@example.com)\"  \n},  \n{  \n\"_id\": \"user_id_123\",  \n\"name\": \"Jane Smith\",  \n\"email\": \"[jane.smith@example.com](https://mailto:jane.smith@example.com)\"  \n}  \n\\],  \n\"latestMessage\": {  \n\"_id\": \"message_id_123\",  \n\"content\": \"Hello!\",  \n\"createdAt\": \"2023-09-12T12:34:56.789Z\"  \n}  \n}\n\n## Example Response (New Chat)\n\n{  \n\"_id\": \"chat_id_456\",  \n\"chatName\": \"sender\",  \n\"isGroupChat\": false,  \n\"users\": \\[  \n{  \n\"_id\": \"user_id_1\",  \n\"name\": \"John Doe\",  \n\"email\": \"[john.doe@example.com](https://mailto:john.doe@example.com)\"  \n},  \n{  \n\"_id\": \"user_id_123\",  \n\"name\": \"Jane Smith\",  \n\"email\": \"[jane.smith@example.com](https://mailto:jane.smith@example.com)\"  \n}  \n\\],  \n\"latestMessage\": null  \n}\n\n# Fetch Chats API\n\n## Endpoint\n\n- `GET /chat/`\n    \n\n## Response\n\n- List of chat objects with details.\n    \n\n## Description\n\n- Retrieves a list of chats associated with the authenticated user.\n- Returns a list of chat objects with relevant details, sorted by the most recently updated chats.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters\n- 500 Internal Server Error: Server issue\n    \n\n## Usage\n\n- Make a GET request to `/message/` to fetch the chats for the authenticated user.\n    \n\n## Example Response\n\n``` json\n[\n  {\n    \"_id\": \"chat_id_123\",\n    \"chatName\": \"Chat with User\",\n    \"isGroupChat\": false,\n    \"users\": [\n      {\n        \"_id\": \"user_id_1\",\n        \"name\": \"John Doe\",\n        \"email\": \"john.doe@example.com\"\n      },\n      {\n        \"_id\": \"user_id_123\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane.smith@example.com\"\n      }\n    ],\n    \"latestMessage\": {\n      \"_id\": \"message_id_123\",\n      \"content\": \"Hello!\",\n      \"createdAt\": \"2023-09-12T12:34:56.789Z\"\n    }\n  },\n  {\n    \"_id\": \"chat_id_456\",\n    \"chatName\": \"Another Chat\",\n    \"isGroupChat\": true,\n    \"users\": [\n      {\n        \"_id\": \"user_id_1\",\n        \"name\": \"John Doe\",\n        \"email\": \"john.doe@example.com\"\n      },\n      {\n        \"_id\": \"user_id_456\",\n        \"name\": \"Alice Johnson\",\n        \"email\": \"alice.johnson@example.com\"\n      }\n    ],\n    \"latestMessage\": null\n  }\n]\n\n ```\n\n# Fetch Groups API\n\n## Endpoint\n\n- `GET /chat/fetch`\n    \n\n## Response\n\n- List of group chat objects.\n    \n\n## Description\n\n- Retrieves a list of all group chats available in the application.\n- Returns a list of group chat objects with relevant details.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters\n- 500 Internal Server Error: Server issue\n    \n\n## Usage\n\n- Make a GET request to `/chat/fetch` to fetch all group chats.\n    \n\n## Example Response\n\n``` json\n[\n  {\n    \"_id\": \"group_chat_id_1\",\n    \"chatName\": \"Group Chat 1\",\n    \"isGroupChat\": true,\n    \"users\": [\n      {\n        \"_id\": \"user_id_1\",\n        \"name\": \"John Doe\",\n        \"email\": \"john.doe@example.com\"\n      },\n      {\n        \"_id\": \"user_id_2\",\n        \"name\": \"Alice Johnson\",\n        \"email\": \"alice.johnson@example.com\"\n      }\n    ],\n    \"latestMessage\": null\n  },\n  {\n    \"_id\": \"group_chat_id_2\",\n    \"chatName\": \"Group Chat 2\",\n    \"isGroupChat\": true,\n    \"users\": [\n      {\n        \"_id\": \"user_id_3\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane.smith@example.com\"\n      },\n      {\n        \"_id\": \"user_id_4\",\n        \"name\": \"Bob Johnson\",\n        \"email\": \"bob.johnson@example.com\"\n      }\n    ],\n    \"latestMessage\": {\n      \"_id\": \"message_id_1\",\n      \"content\": \"Welcome to the group!\",\n      \"createdAt\": \"2023-09-12T12:34:56.789Z\"\n    }\n  }\n]\n\n ```\n\n# Create Group Chat API\n\n## Endpoint\n\n- `POST /chat/create`\n    \n\n## Request Body\n\n- `users` (array of strings): Array of usernames for the group members.\n- `name` (string): Name of the group chat.\n    \n\n## Response\n\n- Group chat object with details.\n    \n\n## Description\n\n- Creates a new group chat with specified users and a name.\n- Requires an array of `users` representing usernames and a `name` for the group chat.\n- Returns the created group chat object with relevant details.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters or group with the same name already exists.\n- 500 Internal Server Error: Server issue.\n    \n\n## Usage\n\n- Use this API to create a new group chat.\n- Provide the list of `users` and a `name` in the request body to create the group chat.\n    \n\n## Example Request Body\n\n``` json\n{\n  \"users\": [\"username1\", \"username2\"],\n  \"name\": \"My Group Chat\"\n}\n\n ```\n\n## Example Response Body\n\n{  \n\"_id\": \"group_chat_id_123\",  \n\"chatName\": \"My Group Chat\",  \n\"isGroupChat\": true,  \n\"users\": \\[  \n{  \n\"_id\": \"user_id_1\",  \n\"name\": \"John Doe\"  \n},  \n{  \n\"_id\": \"user_id_2\",  \n\"name\": \"Alice Johnson\"  \n}  \n\\],  \n\"groupAdmin\": \"admin_user_id\"  \n}\n\n# Add Users to Group API\n\n## Endpoint\n\n- `POST /message/addUserToGroup`\n    \n\n## Request Body\n\n- `groupChatId` (string): ID of the group chat to which users will be added.\n- `usernames` (array of strings): Array of usernames to be added to the group.\n    \n\n## Response\n\n- Success message or error message.\n    \n\n## Description\n\n- Allows the group admin to add users to a group chat.\n- Requires the `groupChatId` of the group and an array of `usernames` to add to the group.\n- Only the group admin can add users to the group.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters or no valid users found for the provided usernames.\n- 403 Forbidden: Only the group admin can add users to the group.\n- 404 Not Found: Group chat not found.\n- 500 Internal Server Error: Server issue.\n    \n\n## Usage\n\n- Use this API to add users to a group chat (admin privilege required).\n- Provide the `groupChatId` and an array of `usernames` in the request body.\n    \n\n## Example Request Body\n\n``` json\n{\n  \"chatName\": \"group chat name\",\n  \"usernames\": [\"username1\", \"username2\"]\n}\n\n ```\n\n## Example Response\n\n{  \n\"msg\": \"Users added to the group successfully\"  \n}\n\n# Remove Users from Group API\n\n## Endpoint\n\n- `POST /chat/remove`\n    \n\n## Request Body\n\n- `chatName` (string): Name of the group chat from which users will be removed.\n- `usernames` (array of strings): Array of usernames to be removed from the group.\n    \n\n## Response\n\n- Success message or error message.\n    \n\n## Description\n\n- Allows the group admin to remove users from a group chat.\n- Requires the `chatName` of the group and an array of `usernames` to remove from the group.\n- Only the group admin can remove users from the group.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters or no valid users found for the provided usernames.\n- 403 Forbidden: Only the group admin can remove users from the group.\n- 404 Not Found: Group chat not found.\n- 500 Internal Server Error: Server issue.\n    \n\n## Usage\n\n- Use this API to remove users from a group chat (admin privilege required).\n- Provide the `chatName` and an array of `usernames` in the request body.\n    \n\n## Example Request Body\n\n``` json\n{\n  \"chatName\": \"group_chat_name\",\n  \"usernames\": [\"username1\", \"username2\"]\n}\n\n ```\n\n## Example Response\n\n{  \n\"msg\": \"Users removed from the group successfully\"  \n}\n\n# All Messages API\n\n## Endpoint\n\n- `GET /message/:chatId`\n    \n\n## URL Parameter\n\n- `chatId` (string): Identifier of the chat for which messages are retrieved.\n    \n\n## Response\n\n- List of message objects.\n    \n\n## Description\n\n- Retrieves all messages for a specific chat.\n- Returns a list of messages for the provided chatId.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters.\n- 500 Internal Server Error: Server issue.\n    \n\n## Usage\n\n- Use this API to retrieve all messages for a specific chat.\n- Make a GET request to the `/message/allMessages/:chatId` endpoint, providing the `chatId` as a URL parameter.\n    \n\n## Example Request\n\n``` javascript\nGET /message/group_chat_id_123\n\n ```\n\n## Example Response\n\n\\[  \n{  \n\"_id\": \"message_id_1\",  \n\"sender\": {  \n\"name\": \"Sender Name\",  \n\"email\": \"[sender@example.com](https://mailto:sender@example.com)\"  \n},  \n\"receiver\": null,  \n\"content\": \"Hello, how are you?\",  \n\"chat\": {  \n\"_id\": \"group_chat_id_123\",  \n\"users\": \\[  \n{  \n\"_id\": \"user_id_1\",  \n\"name\": \"User1\",  \n\"email\": \"[user1@example.com](https://mailto:user1@example.com)\"  \n},  \n{  \n\"_id\": \"user_id_2\",  \n\"name\": \"User2\",  \n\"email\": \"[user2@example.com](https://mailto:user2@example.com)\"  \n}  \n\\]  \n}  \n},  \n// ... (other messages)  \n\\]\n\n# Send Message API\n\n## Endpoint\n\n- `POST /message/sendMessage`\n    \n\n## Request Body\n\n- `content` (string): The message content.\n- `chatId` (string): Identifier of the chat to which the message is sent.\n    \n\n## Response\n\n- Message object with sender, receiver, and chat information.\n    \n\n## Description\n\n- Sends a message to a specific chat.\n- Requires the message `content` and `chatId` in the request body.\n- Returns the sent message with sender, receiver, and chat details.\n    \n\n## Errors\n\n- 400 Bad Request: Invalid request parameters.\n- 500 Internal Server Error: Server issue.\n    \n\n## Usage\n\n- Use this API to send a message to a specific chat.\n- Provide the message `content` and `chatId` in the request body.\n    \n\n## Example Request Body\n\n{  \n\"content\": \"Hello, how are you?\",  \n\"chatId\": \"group_chat_id_123\"  \n}\n\n## Example Response\n\n{  \n\"_id\": \"message_id\",  \n\"sender\": {  \n\"name\": \"Sender Name\"  \n},  \n\"receiver\": null,  \n\"content\": \"Hello, how are you?\",  \n\"chat\": {  \n\"_id\": \"group_chat_id_123\",  \n\"users\": \\[  \n{  \n\"_id\": \"user_id_1\",  \n\"name\": \"User1\",  \n\"email\": \"[user1@example.com](https://mailto:user1@example.com)\"  \n},  \n{  \n\"_id\": \"user_id_2\",  \n\"name\": \"User2\",  \n\"email\": \"[user2@example.com](https://mailto:user2@example.com)\"  \n}  \n\\]  \n}  \n}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23976338"
	},
	"item": []
}